error_log = 
 Traceback (most recent call last):
  [bt] (8) 9   libtvm.dylib                        0x000000012f4e5ca6 TVMFuncCall + 70
  [bt] (7) 8   libtvm.dylib                        0x000000012e9d9622 std::__1::__function::__func<void tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::RelayExpr, tvm::Map<tvm::GlobalVar, tvm::BaseFunc, void, void>, tvm::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>)>::AssignTypedLambda<tvm::$_9>(tvm::$_9)::'lambda'(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*), std::__1::allocator<void tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::RelayExpr, tvm::Map<tvm::GlobalVar, tvm::BaseFunc, void, void>, tvm::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>)>::AssignTypedLambda<tvm::$_9>(tvm::$_9)::'lambda'(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)>, void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)>::operator()(tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) + 610
  [bt] (6) 7   libtvm.dylib                        0x000000012e9cb1a7 tvm::IRModule::FromExpr(tvm::RelayExpr const&, tvm::Map<tvm::GlobalVar, tvm::BaseFunc, void, void> const&, tvm::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void> const&) + 999
  [bt] (5) 6   libtvm.dylib                        0x000000012e9c8367 tvm::IRModuleNode::Add(tvm::GlobalVar const&, tvm::BaseFunc const&, bool) + 183
  [bt] (4) 5   libtvm.dylib                        0x000000012e9c7e0f tvm::RunTypeCheck(tvm::IRModule const&, tvm::GlobalVar const&, tvm::relay::Function) + 1103
  [bt] (3) 4   libtvm.dylib                        0x000000012f33c150 tvm::relay::InferType(tvm::relay::Function const&, tvm::IRModule const&, tvm::GlobalVar const&) + 544
  [bt] (2) 3   libtvm.dylib                        0x000000012f33b2a7 tvm::relay::TypeInferencer::Infer(tvm::RelayExpr) + 119
  [bt] (1) 2   libtvm.dylib                        0x000000012e9b8a7c tvm::ErrorReporter::RenderErrors(tvm::IRModule const&, bool) + 5708
  [bt] (0) 1   libtvm.dylib                        0x000000012e7c985f dmlc::LogMessageFatal::~LogMessageFatal() + 111
  File "/Users/BlindForAnonymous/Documents/tvm-0.7/src/ir/error.cc", line 132
TVMError: [1m
Error(s) have occurred. The program has been annotated with them:

[0m[1mIn `main`: 
[0m#[version = "0.0.5"]
fn (%node1: Tensor[(3, 4, 5, 3), float32], %node3: Tensor[(4, 4), int64]) {
  %0 = abs(%node1);
  %1 = multiply(%0, 0.2f);
  %2 = add(%1, 0.5f);
  %3 = clip(%2, a_min=0f, a_max=1f);
  %4 = negative(%3);
  %5 = broadcast_to(%4, meta[relay.attrs.InitOpAttrs][0]);
  %6 = reshape(%5, newshape=[-1]);
  %7 = multiply(%node1, %node1);
  %8 = sum(%7, axis=[3, 2, 1], keepdims=True);
  %9 = sqrt(%8);
  %10 = reshape(%9, newshape=[-1]);
  %11 = reshape(%node1, newshape=[-1]);
  %12 = broadcast_to(%11, meta[relay.attrs.InitOpAttrs][1])[31m Incompatible broadcast type TensorType([180], float32) and TensorType([4], float32); [39m;
  %13 = nn.prelu(%node1, %12);
  %14 = reshape(%13, newshape=[-1]);
  %15 = take(%node1, %node3, axis=0);
  %16 = reshape(%15, newshape=[-1]);
  %17 = nn.softmax(%3, axis=0);
  %18 = reshape(%17, newshape=[-1]);
  %19 = (%6, %10, %14, %16, %18);
  concatenate(%19, axis=-1)
}
/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */

