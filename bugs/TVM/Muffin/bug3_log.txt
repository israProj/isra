number= 8

error_log = 
 Traceback (most recent call last):
  [bt] (8) 9   libtvm.dylib                        0x000000013e59aca6 TVMFuncCall + 70
  [bt] (7) 8   libtvm.dylib                        0x000000013da8e622 std::__1::__function::__func<void tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::RelayExpr, tvm::Map<tvm::GlobalVar, tvm::BaseFunc, void, void>, tvm::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>)>::AssignTypedLambda<tvm::$_9>(tvm::$_9)::'lambda'(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*), std::__1::allocator<void tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::RelayExpr, tvm::Map<tvm::GlobalVar, tvm::BaseFunc, void, void>, tvm::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>)>::AssignTypedLambda<tvm::$_9>(tvm::$_9)::'lambda'(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)>, void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)>::operator()(tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) + 610
  [bt] (6) 7   libtvm.dylib                        0x000000013da801a7 tvm::IRModule::FromExpr(tvm::RelayExpr const&, tvm::Map<tvm::GlobalVar, tvm::BaseFunc, void, void> const&, tvm::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void> const&) + 999
  [bt] (5) 6   libtvm.dylib                        0x000000013da7d367 tvm::IRModuleNode::Add(tvm::GlobalVar const&, tvm::BaseFunc const&, bool) + 183
  [bt] (4) 5   libtvm.dylib                        0x000000013da7ce0f tvm::RunTypeCheck(tvm::IRModule const&, tvm::GlobalVar const&, tvm::relay::Function) + 1103
  [bt] (3) 4   libtvm.dylib                        0x000000013e3f1150 tvm::relay::InferType(tvm::relay::Function const&, tvm::IRModule const&, tvm::GlobalVar const&) + 544
  [bt] (2) 3   libtvm.dylib                        0x000000013e3f02a7 tvm::relay::TypeInferencer::Infer(tvm::RelayExpr) + 119
  [bt] (1) 2   libtvm.dylib                        0x000000013da6da7c tvm::ErrorReporter::RenderErrors(tvm::IRModule const&, bool) + 5708
  [bt] (0) 1   libtvm.dylib                        0x000000013d87e85f dmlc::LogMessageFatal::~LogMessageFatal() + 111
  [bt] (8) 9   libtvm.dylib                        0x000000013da7d367 tvm::IRModuleNode::Add(tvm::GlobalVar const&, tvm::BaseFunc const&, bool) + 183
  [bt] (7) 8   libtvm.dylib                        0x000000013da7ce0f tvm::RunTypeCheck(tvm::IRModule const&, tvm::GlobalVar const&, tvm::relay::Function) + 1103
  [bt] (6) 7   libtvm.dylib                        0x000000013e3f1150 tvm::relay::InferType(tvm::relay::Function const&, tvm::IRModule const&, tvm::GlobalVar const&) + 544
  [bt] (5) 6   libtvm.dylib                        0x000000013e3f028b tvm::relay::TypeInferencer::Infer(tvm::RelayExpr) + 91
  [bt] (4) 5   libtvm.dylib                        0x000000013e29e0a6 tvm::relay::TypeSolver::Solve() + 1126
  [bt] (3) 4   libtvm.dylib                        0x000000013e29e6a3 tvm::TypedEnvFunc<bool (tvm::runtime::Array<tvm::Type, void> const&, int, tvm::Attrs const&, tvm::TypeReporter const&)>::operator()(tvm::runtime::Array<tvm::Type, void> const&, int, tvm::Attrs const&, tvm::TypeReporter const&) const + 291
  [bt] (2) 3   libtvm.dylib                        0x000000013dae595b void tvm::runtime::TypedPackedFunc<bool (tvm::runtime::Array<tvm::Type, void> const&, int, tvm::Attrs const&, tvm::TypeReporter const&)>::AssignTypedLambda<bool (*)(tvm::runtime::Array<tvm::Type, void> const&, int, tvm::Attrs const&, tvm::TypeReporter const&)>(bool (*)(tvm::runtime::Array<tvm::Type, void> const&, int, tvm::Attrs const&, tvm::TypeReporter const&))::'lambda'(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const + 555
  [bt] (1) 2   libtvm.dylib                        0x000000013e3efa4c tvm::relay::TupleGetItemRel(tvm::runtime::Array<tvm::Type, void> const&, int, tvm::Attrs const&, tvm::TypeReporter const&) + 620
  [bt] (0) 1   libtvm.dylib                        0x000000013d87e85f dmlc::LogMessageFatal::~LogMessageFatal() + 111
  File "/Users/BlindForAnonymous/Documents/tvm-0.7/src/ir/error.cc", line 132
TVMError: [1m
Error(s) have occurred. The program has been annotated with them:

[0m[1mIn `main`: 
[0m#[version = "0.0.5"]
fn () {
  meta[relay.Constant][0].0[31m an internal invariant was violated while typechecking your program [09:51:50] /Users/BlindForAnonymous/Documents/tvm-0.7/src/relay/transforms/type_infer.cc:65: Check failed: data != nullptr: TupleGetItem expect input type to be TupleType  get TensorType([1, 1, 3], float32) instead
; [39m
}
/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */

