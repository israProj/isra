file= test/model_343.onnx
error_log = 
 b'run: test/model_343.onnx test/oracle_343.pkl\npython3 -m bmneto --model test/model_343.onnx --shapes (8,1) --input_names "i0" --net_name test/model_343 --opt 1 --dyn False --outdir out --target BM1684 --cmp True --mode compile --v 3\nLoad bmcompiler ok\nmodel_file_path:  test/model_343.onnx\nbmcpu init: skip cpu_user_defined\nopen usercpu.so, init user_cpu_init \n'b'WARNING: Logging before InitGoogleLogging() is written to STDERR\nI0220 16:33:39.323951 100618 bmcompiler_basics.cpp:1328] [BMCompiler:I] Adding COEFF_LAYER layer, layer_id=0\nI0220 16:33:39.325160 100618 bmcompiler_basics.cpp:1328] [BMCompiler:I] Adding IDENTITY layer, layer_id=1\nI0220 16:33:39.326000 100618 bmcompiler_basics.cpp:1328] [BMCompiler:I] Adding COEFF_LAYER layer, layer_id=2\nI0220 16:33:39.326496 100618 bmcompiler_basics.cpp:1328] [BMCompiler:I] Adding IDENTITY layer, layer_id=3\nI0220 16:33:39.326845 100618 bmcompiler_basics.cpp:1328] [BMCompiler:I] Adding ACTIVE(SQRT) layer, layer_id=4\nI0220 16:33:39.327260 100618 bmcompiler_basics.cpp:1328] [BMCompiler:I] Adding IDENTITY layer, layer_id=5\nI0220 16:33:39.327528 100618 bmcompiler_basics.cpp:1328] [BMCompiler:I] Adding SHAPE_CONST layer, layer_id=6\nI0220 16:33:39.327752 100618 bmcompiler_basics.cpp:1328] [BMCompiler:I] Adding SHAPE_CONST layer, layer_id=7\nI0220 16:33:39.327961 100618 bmcompiler_basics.cpp:1328] [BMCompiler:I] Adding SHAPE_CONST layer, layer_id=8\nI0220 16:33:39.328255 100618 bmcompiler_basics.cpp:1328] [BMCompiler:I] Adding SHAPE_CONST layer, layer_id=9\nI0220 16:33:39.328747 100618 bmcompiler_basics.cpp:1328] [BMCompiler:I] Adding STRIDESLICE layer, layer_id=10\nI0220 16:33:39.329120 100618 bmcompiler_basics.cpp:1328] [BMCompiler:I] Adding SOFTMAX layer, layer_id=11\nI0220 16:33:39.329480 100618 bmcompiler_basics.cpp:1328] [BMCompiler:I] Adding BROADCAST_BINARY(DIV) layer, layer_id=12\nI0220 16:33:39.329849 100618 bmcompiler_basics.cpp:1328] [BMCompiler:I] Adding BROADCAST_BINARY(MAX) layer, layer_id=13\nTraceback (most recent call last):\n  File "run_sop.py", line 40, in <module>\n    test_sop(f, i)\n  File "run_sop.py", line 26, in test_sop\n    input_names = input_names, ## Necessary\n  File "/root/.local/lib/python3.7/site-packages/bmneto/bmneto_interface.py", line 19, in compile\n    compile_run(_args)\n  File "/root/.local/lib/python3.7/site-packages/bmneto/bmneto_compile.py", line 244, in compile_run\n    compile_model(bmcompiler, args)\n  File "/root/.local/lib/python3.7/site-packages/bmneto/bmneto_compile.py", line 188, in compile_model\n    graph.layer_to_bmcompiler(bmcompiler)\n  File "/root/.local/lib/python3.7/site-packages/bmneto/bmnet_graph.py", line 396, in layer_to_bmcompiler\n    deploy_factory.add_layer(bmcompiler, layer, False, self)\n  File "/root/.local/lib/python3.7/site-packages/bmneto/layer_factory.py", line 175, in add_layer\n    return self.layer_dict[layer_type](bmcompiler, layer)\n  File "/root/.local/lib/python3.7/site-packages/bmneto/layers/activate_layer.py", line 89, in add_power_layer\n    if ins[1].data[0] == 2.0:\nValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()\n'
